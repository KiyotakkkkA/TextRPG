import json
from src.utils.Logger import Logger

class NPC:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö NPC –≤ –∏–≥—Ä–µ"""
    
    def __init__(self, id, name, description, npc_type, location_id=None):
        self.id = id
        self.name = name
        self.description = description
        self.type = npc_type  # "trader", "quest", "dialog"
        self.location_id = location_id
        self.dialogue_tree = {}
        self.logger = Logger()
        
    def get_greeting(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ NPC, –µ—Å–ª–∏ –µ—Å—Ç—å"""
        if "greeting" in self.dialogue_tree:
            return self.dialogue_tree["greeting"]
        return f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ø—É—Ç–Ω–∏–∫. –Ø {self.name}."
        
    def get_dialogue(self, dialogue_id="greeting"):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ ID"""
        if dialogue_id in self.dialogue_tree:
            return self.dialogue_tree[dialogue_id]
        return None
        
    def get_basic_info(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ NPC"""
        return {
            "id": self.id,
            "name": self.name,
            "description": self.description,
            "type": self.type,
            "location": self.location_id
        }
        
    def check_dialogue_condition(self, game, condition):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–∏–∞–ª–æ–≥–∞
        
        Args:
            game: –û–±—ä–µ–∫—Ç –∏–≥—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏–≥—Ä–æ–∫–∞
            condition: –°—Ç—Ä–æ–∫–∞ —Å —É—Å–ª–æ–≤–∏–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, "quest_available_quest1")
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, False –µ—Å–ª–∏ –Ω–µ—Ç
            str: –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏–ª–∏ None –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)
        """
        if not condition:
            return True, None
            
        player = game.player
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–≤–µ—Å—Ç–∞
        if condition.startswith("quest_available_"):
            quest_id = condition.replace("quest_available_", "")
            quest = game.get_quest(quest_id)
            if quest and not quest.is_started() and not quest.is_completed():
                return True, None
            return False, f"[üìú –ù—É–∂–µ–Ω –∫–≤–µ—Å—Ç: {quest_id if not quest else quest.name}]"
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
        elif condition.startswith("quest_completed_"):
            quest_id = condition.replace("quest_completed_", "")
            quest = game.get_quest(quest_id)
            if quest and quest.is_completed():
                return True, None
            return False, f"[üìú –ù—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å: {quest_id if not quest else quest.name}]"
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è –Ω–∞–≤—ã–∫–∞
        elif condition.startswith("skill_"):
            # –§–æ—Ä–º–∞—Ç: skill_SKILLID_LEVEL
            parts = condition.split("_")
            if len(parts) >= 3:
                skill_id = parts[1]
                skill_level = int(parts[2])
                
                skill = player.skill_system.get_skill(skill_id)
                if skill and skill.level >= skill_level:
                    return True, None
                    
                skill_name = skill.name if skill else skill_id.capitalize()
                return False, f"[üß† {skill_name}: {skill_level}]"
                
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
        elif condition.startswith("item_"):
            item_id = condition.replace("item_", "")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
            for item in player.inventory.items:
                if item.id.lower() == item_id.lower():
                    return True, None
                    
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            item_data = game.get_item(item_id)
            item_name = item_data.get("name", item_id) if item_data else item_id
            return False, f"[üì¶ {item_name}]"
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å NPC
        elif condition.startswith("npc_known_"):
            npc_id = condition.replace("npc_known_", "")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ NPC –≤ –≥–ª–æ—Å—Å–∞—Ä–∏–∏
            glossary_npcs = game.get_glossary_npcs()
            if npc_id in glossary_npcs:
                return True, None
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è NPC –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            npc = game.get_npc(npc_id)
            npc_name = npc.name if npc else npc_id
            return False, f"[üë§ –ó–Ω–∞–Ω–∏–µ –æ: {npc_name}]"
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏
        elif condition.startswith("location_visited_"):
            location_id = condition.replace("location_visited_", "")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞—Ü–∏—è –≤ –≥–ª–æ—Å—Å–∞—Ä–∏–∏ (–∫–∞–∫ –∏ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥)
            if hasattr(game, "visited_locations") and location_id in game.visited_locations:
                return True, None
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            location = game.get_location(location_id)
            location_name = location.name if location else location_id
            return False, f"[üó∫Ô∏è –ü–æ—Å–µ—â–µ–Ω–æ: {location_name}]"
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –Ω–∞–¥ –º–æ–Ω—Å—Ç—Ä–æ–º
        elif condition.startswith("monster_defeated_"):
            monster_id = condition.replace("monster_defeated_", "")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–Ω—Å—Ç—Ä –≤ –≥–ª–æ—Å—Å–∞—Ä–∏–∏
            glossary_monsters = game.get_glossary_monsters()
            if monster_id in glossary_monsters:
                return True, None
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–æ–Ω—Å—Ç—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            monster_data = game.get_monster(monster_id)
            monster_name = monster_data.name if monster_data else monster_id
            return False, f"[‚öîÔ∏è –ü–æ–±–µ–∂–¥–µ–Ω–æ: {monster_name}]"
        
        # –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
        return True, None 