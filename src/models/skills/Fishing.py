from src.models.SimpleSkill import SimpleSkill
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from src.models.Player import Player

class Fishing(SimpleSkill):
    def __init__(self):
        super().__init__()
        self.id = "fishing"
        self.group_id = "handcrafting"
        self.name = "–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ"
        self.description = "–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ - –Ω–∞–≤—ã–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–æ–≤–∏—Ç—å —Ä—ã–±—É –≤ –≤–æ–¥–æ–µ–º–∞—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—â–∏ –∏ —Ü–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤."
        self.icon = "üé£"
        self.max_level_experience = 10000
        self.max_level = 100
        self.unlocked_at_level = 1  # –î–æ—Å—Ç—É–ø–µ–Ω —Å 1 —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞
        
        # –ü–∞—Å—Å–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö –Ω–∞–≤—ã–∫–∞
        self.passive_bonuses = {
            # –ë—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ
        }
        
        # –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö
        self.unlocked_abilities = {
            # –ë—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        self.set_level(1)
    
    def use(self, player: 'Player', *args, **kwargs) -> bool:
        """
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞–≤—ã–∫ —Ä—ã–±–æ–ª–æ–≤—Å—Ç–≤–∞ –¥–ª—è –ª–æ–≤–ª–∏ —Ä—ã–±—ã.
        
        Args:
            location (str, optional): ID –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏
            tool (str, optional): ID –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π —Å–Ω–∞—Å—Ç–∏
            
        Returns:
            bool: True, –µ—Å–ª–∏ –Ω–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω
        """
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–≤—ã–∫–∞
        if not self.can_use(player):
            return False
            
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        location_id = kwargs.get('location')
        tool_id = kwargs.get('tool')
        
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–æ–¥–æ–µ–º–∞ –≤ –ª–æ–∫–∞—Ü–∏–∏
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞
        if location_id and "river" in location_id or "lake" in location_id:
            # –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ —Ä—ã–±–∞–ª–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
            # –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É
            return True
            
        return False 