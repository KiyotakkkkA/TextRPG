"""
–ú–æ–¥–µ–ª—å –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã.
–õ–æ–∫–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ—Å—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å, –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ª–æ–∫–∞—Ü–∏—è–º–∏.
"""

import random
import time
import json
import copy  # –î–æ–±–∞–≤–ª—è—é –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è copy –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
from typing import Dict, List, Any, Optional

class Location:
    """
    –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ª–æ–∫–∞—Ü–∏—é –≤ –∏–≥—Ä–æ–≤–æ–º –º–∏—Ä–µ.
    –õ–æ–∫–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ—Å—É—Ä—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å, –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ª–æ–∫–∞—Ü–∏—è–º–∏.
    """
    
    def __init__(self, location_id: str, data: Dict[str, Any]):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–æ–∫–∞—Ü–∏—é.
        
        Args:
            location_id (str): –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ–∫–∞—Ü–∏–∏
            data (dict): –î–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ JSON
        """
        self.id = location_id
        self.name = data.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è")
        self.description = data.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
        self.type = data.get("type", "generic")
        self.icon = data.get("icon", "üåç")
        self.color = data.get("color", "white")
        
        # –†–µ—Å—É—Ä—Å—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏
        self.available_resources = {}
        self._resources_data = data.get("resources", {})
        self._spawn_resources()
        
        # –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ª–æ–∫–∞—Ü–∏—è–º–∏
        self.connections = data.get("connections", [])
        
        # –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏
        self.characters = data.get("characters", [])
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ª–æ–∫–∞—Ü–∏–∏
        self.properties = data.get("properties", {})
        
        # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
        self.last_resources_update = 0
        self.resources_respawn_time = data.get("resources_respawn_time", 600)  # –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    
    def _spawn_resources(self):
        """
        –°–ø–∞–≤–Ω–∏—Ç —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º.
        """
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤
        self.available_resources = {}
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª—É–±–æ–∫–∏–µ –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ—Å—É—Ä—Å–∞—Ö –¥–ª—è –∫–∞–∂–¥–æ–π –ª–æ–∫–∞—Ü–∏–∏
        # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –ø—Ä–æ–±–ª–µ–º—É —Å —É–¥–∞–ª–µ–Ω–∏–µ–º —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–æ –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏–π –ø—Ä–∏ —Å–±–æ—Ä–µ –Ω–∞ –æ–¥–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
        for resource_id, resource_data in self._resources_data.items():
            # –°–æ–∑–¥–∞–µ–º –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ—Å—É—Ä—Å–µ
            resource_copy = copy.deepcopy(resource_data)
            min_amount = resource_copy.get("min_amount", 0)
            max_amount = resource_copy.get("max_amount", 0)
            
            # –ï—Å–ª–∏ max_amount == 0, —Ç–æ —Ä–µ—Å—É—Ä—Å –Ω–µ —Å–ø–∞–≤–Ω–∏—Ç—Å—è
            if max_amount > 0:
                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–∞ –º–µ–∂–¥—É min –∏ max
                amount = random.randint(min_amount, max_amount)
                if amount > 0:
                    self.available_resources[resource_id] = amount
    
    def respawn_resources(self, current_time: float) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏.
        
        Args:
            current_time (float): –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
            
        Returns:
            bool: True, –µ—Å–ª–∏ —Ä–µ—Å—É—Ä—Å—ã –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
        """
        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if current_time - self.last_resources_update >= self.resources_respawn_time:
            self._spawn_resources()
            self.last_resources_update = current_time
            return True
        return False
    
    def collect_resource(self, resource_id: str, amount: int = 1) -> int:
        """
        –°–æ–±–∏—Ä–∞–µ—Ç —Ä–µ—Å—É—Ä—Å —Å –ª–æ–∫–∞—Ü–∏–∏.
        
        Args:
            resource_id (str): ID —Ä–µ—Å—É—Ä—Å–∞
            amount (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Å–±–æ—Ä–∞
            
        Returns:
            int: –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞
        """
        if resource_id not in self.available_resources:
            return 0
        
        available = self.available_resources[resource_id]
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å
        to_collect = min(available, amount)
        
        # –£–º–µ–Ω—å—à–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        self.available_resources[resource_id] -= to_collect
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ—Å—É—Ä—Å –≤ —Å–ø–∏—Å–∫–µ –¥–∞–∂–µ –µ—Å–ª–∏ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–≤–Ω–æ 0
        # –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –µ–≥–æ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ä–µ–º—è —Ä–µ—Å–ø–∞—É–Ω–∞
        # –†–µ—Å—É—Ä—Å —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 0 –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–±—Ä–∞–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—à–µ)
        # –£–¥–∞–ª—è—Ç—å —Ä–µ—Å—É—Ä—Å –±—É–¥–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –º–µ—Ç–æ–¥–æ–º _spawn_resources
        
        return to_collect
    
    def get_resource_data(self, resource_id: str) -> Dict[str, Any]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–∞.
        
        Args:
            resource_id (str): ID —Ä–µ—Å—É—Ä—Å–∞
            
        Returns:
            dict: –î–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å–∞
        """
        return self._resources_data.get(resource_id, {})
    
    def to_dict(self) -> Dict[str, Any]:
        """
        –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ª–æ–∫–∞—Ü–∏—é –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
        
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ª–æ–∫–∞—Ü–∏–∏
        """
        return {
            "id": self.id,
            "name": self.name,
            "description": self.description,
            "type": self.type,
            "icon": self.icon,
            "color": self.color,
            "available_resources": self.available_resources,
            "connections": self.connections,
            "characters": self.characters,
            "properties": self.properties,
            "last_resources_update": self.last_resources_update
        }
    
    def __str__(self) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏.
        
        Returns:
            str: –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        """
        return f"{self.icon} {self.name} [{self.id}]" 