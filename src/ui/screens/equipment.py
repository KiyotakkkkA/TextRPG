import os
import readchar
from colorama import Fore, Back, Style

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è UI - –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤—ã–µ —Ä–∞–º–∫–∏
BOX_CHARS = {
    "h_line": "‚îÅ",
    "v_line": "‚îÉ",
    "tl_corner": "‚îè",
    "tr_corner": "‚îì",
    "bl_corner": "‚îó",
    "br_corner": "‚îõ",
    "l_connector": "‚î£",
    "r_connector": "‚î´",
    "t_connector": "‚î≥",
    "b_connector": "‚îª",
    "cross": "‚ïã"
}

# –ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ—Ç–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è UI
SLOT_NAMES = {
    "head": "–ì–æ–ª–æ–≤–∞",
    "body": "–¢–µ–ª–æ",
    "legs": "–ù–æ–≥–∏",
    "feet": "–°—Ç—É–ø–Ω–∏",
    "hands": "–†—É–∫–∏",
    "weapon": "–û—Ä—É–∂–∏–µ",
    "offhand": "–õ–µ–≤–∞—è —Ä—É–∫–∞",
    "accessory1": "–ê–∫—Å–µ—Å—Å—É–∞—Ä 1",
    "accessory2": "–ê–∫—Å–µ—Å—Å—É–∞—Ä 2"
}

# –¶–≤–µ—Ç–∞ –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
STAT_COLORS = {
    "defense": Fore.BLUE,
    "attack": Fore.RED,
    "magic": Fore.MAGENTA,
    "durability": Fore.GREEN,
    "weight": Fore.YELLOW
}

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
STAT_ICONS = {
    "defense": "üõ°Ô∏è",
    "attack": "‚öîÔ∏è",
    "magic": "‚ú®",
    "durability": "‚öíÔ∏è",
    "weight": "‚öñÔ∏è"
}

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Å–ª–æ—Ç–æ–≤
SLOT_ICONS = {
    "head": "üëë",
    "body": "üëï",
    "legs": "üëñ",
    "feet": "üë¢",
    "hands": "üß§",
    "weapon": "üó°Ô∏è",
    "offhand": "üõ°Ô∏è",
    "accessory1": "üíç",
    "accessory2": "üìø"
}

def draw_box(width, title=None, color=Fore.CYAN):
    """–†–∏—Å—É–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é —Ä–∞–º–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º"""
    # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
    if title:
        title_len = len(title) + 4  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        left_padding = (width - title_len) // 2
        right_padding = width - title_len - left_padding
        
        print(f"{color}{BOX_CHARS['tl_corner']}{BOX_CHARS['h_line'] * left_padding} {title} {BOX_CHARS['h_line'] * right_padding}{BOX_CHARS['tr_corner']}{Style.RESET_ALL}")
    else:
        print(f"{color}{BOX_CHARS['tl_corner']}{BOX_CHARS['h_line'] * (width-2)}{BOX_CHARS['tr_corner']}{Style.RESET_ALL}")

def draw_bottom_box(width, color=Fore.CYAN):
    """–†–∏—Å—É–µ—Ç –Ω–∏–∂–Ω—é—é —á–∞—Å—Ç—å —Ä–∞–º–∫–∏"""
    print(f"{color}{BOX_CHARS['bl_corner']}{BOX_CHARS['h_line'] * (width-2)}{BOX_CHARS['br_corner']}{Style.RESET_ALL}")

def draw_separator(width, color=Fore.CYAN):
    """–†–∏—Å—É–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ —Ä–∞–º–∫–µ"""
    print(f"{color}{BOX_CHARS['l_connector']}{BOX_CHARS['h_line'] * (width-2)}{BOX_CHARS['r_connector']}{Style.RESET_ALL}")

def draw_vertical_line(color=Fore.CYAN):
    """–†–∏—Å—É–µ—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é"""
    return f"{color}{BOX_CHARS['v_line']}{Style.RESET_ALL}"

def show_equipment(game_menu):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç–∫—Ä–∞–Ω —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –µ—é"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω—É–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    player = game_menu.game.player
    equipment = player.get_equipped_items()
    bonuses = player.get_equipment_bonuses()
    
    # –°–ø–∏—Å–æ–∫ —Å–ª–æ—Ç–æ–≤ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    slots = list(equipment.keys())
    current_slot_index = 0
    
    # –§–ª–∞–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter –Ω–∞ –ø—É—Å—Ç–æ–º —Å–ª–æ—Ç–µ
    show_inventory_items = False
    current_item_index = 0
    
    # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª —ç–∫—Ä–∞–Ω–∞ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
    while True:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –∏ –±–æ–Ω—É—Å—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        equipment = player.get_equipped_items()
        bonuses = player.get_equipment_bonuses()
        
        game_menu.clear_screen()
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        draw_box(80, "–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞", Fore.CYAN)
        
        # –°–æ–∑–¥–∞–µ–º –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞
        if not show_inventory_items:
            # –õ–µ–≤–∞—è —á–∞—Å—Ç—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–ª–æ—Ç–∞—Ö
            print(f"{draw_vertical_line()} {Fore.CYAN}–°–ª–æ—Ç—ã —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏:{Style.RESET_ALL}")
            
            for i, slot in enumerate(slots):
                slot_name = SLOT_NAMES.get(slot, slot)
                item = equipment[slot]
                slot_icon = SLOT_ICONS.get(slot, "üì¶")
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ª–æ—Ç –∏ –ø—Ä–µ–¥–º–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                if i == current_slot_index:
                    slot_marker = f"{Fore.YELLOW}>{Style.RESET_ALL}"
                else:
                    slot_marker = " "
                
                if item:
                    rarity_color = game_menu.get_rarity_color(item.get_rarity())
                    print(f"{draw_vertical_line()} {slot_marker} {slot_icon} {slot_name}: {rarity_color}{item.name}{Style.RESET_ALL}")
                else:
                    print(f"{draw_vertical_line()} {slot_marker} {slot_icon} {slot_name}: {Fore.LIGHTBLACK_EX}–ü—É—Å—Ç–æ{Style.RESET_ALL}")
            
            print(f"{draw_vertical_line()}")
            draw_separator(80)
            
            # –ë–æ–Ω—É—Å—ã –æ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
            print(f"{draw_vertical_line()} {Fore.CYAN}–ë–æ–Ω—É—Å—ã –æ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏:{Style.RESET_ALL}")
            
            for stat, value in bonuses.items():
                color = STAT_COLORS.get(stat, Fore.WHITE)
                stat_name = stat.capitalize()
                stat_icon = STAT_ICONS.get(stat, "üîπ")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–Ω—É—é –ø–æ–ª–æ—Å–∫—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                if value > 0:
                    bar = color + "‚ñ†" * min(value, 10) + Style.RESET_ALL
                else:
                    bar = Fore.LIGHTBLACK_EX + "‚ñ°" * 5 + Style.RESET_ALL
                
                print(f"{draw_vertical_line()} {stat_icon} {stat_name}: {color}+{value}{Style.RESET_ALL} {bar}")
            
            print(f"{draw_vertical_line()}")
            draw_separator(80)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ
            current_slot = slots[current_slot_index]
            item = equipment[current_slot]
            
            print(f"{draw_vertical_line()} {Fore.CYAN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–æ—Ç–µ:{Style.RESET_ALL}")
            print(f"{draw_vertical_line()} {SLOT_ICONS.get(current_slot, 'üì¶')} {Fore.CYAN}{SLOT_NAMES.get(current_slot, current_slot)}{Style.RESET_ALL}")
            
            if item:
                # –î–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
                rarity_color = game_menu.get_rarity_color(item.get_rarity())
                rarity_name = get_rarity_name(item.get_rarity())
                
                print(f"{draw_vertical_line()}")
                print(f"{draw_vertical_line()} {Fore.CYAN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ:{Style.RESET_ALL}")
                print(f"{draw_vertical_line()} {rarity_color}{item.name}{Style.RESET_ALL} - {rarity_color}{rarity_name}{Style.RESET_ALL}")
                print(f"{draw_vertical_line()} {Fore.WHITE}{item.get_description()}{Style.RESET_ALL}")
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                if hasattr(item, 'characteristics') and item.characteristics:
                    print(f"{draw_vertical_line()}")
                    print(f"{draw_vertical_line()} {Fore.CYAN}–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:{Style.RESET_ALL}")
                    
                    for stat, value in item.characteristics.items():
                        color = STAT_COLORS.get(stat, Fore.WHITE)
                        stat_name = stat.capitalize()
                        stat_icon = STAT_ICONS.get(stat, "üîπ")
                        
                        print(f"{draw_vertical_line()} {stat_icon} {stat_name}: {color}{value}{Style.RESET_ALL}")
            else:
                print(f"{draw_vertical_line()} {Fore.LIGHTBLACK_EX}–°–ª–æ—Ç –ø—É—Å—Ç{Style.RESET_ALL}")
                print(f"{draw_vertical_line()}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞
                all_items = player.inventory.get_items()
                equippable_items = [item for item in all_items if hasattr(item, 'get_slot') and item.get_slot() == current_slot]
                
                if equippable_items:
                    print(f"{draw_vertical_line()} {Fore.YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã{Style.RESET_ALL}")
                else:
                    print(f"{draw_vertical_line()} {Fore.LIGHTBLACK_EX}–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞{Style.RESET_ALL}")
            
            # –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
            print(f"{draw_vertical_line()}")
            draw_separator(80)
            print(f"{draw_vertical_line()} {Fore.CYAN}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{Style.RESET_ALL}")
            
            if item:
                print(f"{draw_vertical_line()} {Fore.GREEN}[–ü—Ä–æ–±–µ–ª]{Style.RESET_ALL} –°–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç   {Fore.YELLOW}[‚Üë/‚Üì]{Style.RESET_ALL} –í—ã–±—Ä–∞—Ç—å —Å–ª–æ—Ç   {Fore.RED}[Esc]{Style.RESET_ALL} –í—ã—Ö–æ–¥")
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–¥–µ—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ —ç—Ç–æ—Ç —Å–ª–æ—Ç
                all_items = player.inventory.get_items()
                equippable_items = [item for item in all_items if hasattr(item, 'get_slot') and item.get_slot() == current_slot]
                
                if equippable_items:
                    print(f"{draw_vertical_line()} {Fore.GREEN}[Enter]{Style.RESET_ALL} –ù–∞–¥–µ—Ç—å –ø—Ä–µ–¥–º–µ—Ç   {Fore.YELLOW}[‚Üë/‚Üì]{Style.RESET_ALL} –í—ã–±—Ä–∞—Ç—å —Å–ª–æ—Ç   {Fore.RED}[Esc]{Style.RESET_ALL} –í—ã—Ö–æ–¥")
                else:
                    print(f"{draw_vertical_line()} {Fore.YELLOW}[‚Üë/‚Üì]{Style.RESET_ALL} –í—ã–±—Ä–∞—Ç—å —Å–ª–æ—Ç   {Fore.RED}[Esc]{Style.RESET_ALL} –í—ã—Ö–æ–¥")
        else:
            # –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å —ç–∫–∏–ø–∏—Ä—É–µ–º—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞
            all_items = player.inventory.get_items()
            current_slot = slots[current_slot_index]
            equippable_items = [item for item in all_items if hasattr(item, 'get_slot') and item.get_slot() == current_slot]
            
            print(f"{draw_vertical_line()} {Fore.CYAN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —Å–ª–æ—Ç–∞ {SLOT_NAMES.get(current_slot, current_slot)}:{Style.RESET_ALL}")
            
            if not equippable_items:
                print(f"{draw_vertical_line()} {Fore.YELLOW}–í –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞.{Style.RESET_ALL}")
                print(f"{draw_vertical_line()}")
                print(f"{draw_vertical_line()} {Fore.GREEN}–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è...{Style.RESET_ALL}")
                draw_bottom_box(80)
                
                # –û–∂–∏–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ –∏ –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
                readchar.readkey()
                show_inventory_items = False
                continue
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞
            for i, item in enumerate(equippable_items):
                rarity_color = game_menu.get_rarity_color(item.get_rarity())
                
                if i == current_item_index:
                    print(f"{draw_vertical_line()} {Fore.YELLOW}>{Style.RESET_ALL} {rarity_color}{item.name}{Style.RESET_ALL}")
                else:
                    print(f"{draw_vertical_line()}   {rarity_color}{item.name}{Style.RESET_ALL}")
            
            print(f"{draw_vertical_line()}")
            draw_separator(80)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            if equippable_items and current_item_index >= 0 and current_item_index < len(equippable_items):
                selected_item = equippable_items[current_item_index]
                
                rarity_color = game_menu.get_rarity_color(selected_item.get_rarity())
                rarity_name = get_rarity_name(selected_item.get_rarity())
                
                print(f"{draw_vertical_line()} {Fore.CYAN}–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ:{Style.RESET_ALL}")
                print(f"{draw_vertical_line()} {rarity_color}{selected_item.name}{Style.RESET_ALL} - {rarity_color}{rarity_name}{Style.RESET_ALL}")
                print(f"{draw_vertical_line()} {Fore.WHITE}{selected_item.get_description()}{Style.RESET_ALL}")
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                if hasattr(selected_item, 'characteristics') and selected_item.characteristics:
                    print(f"{draw_vertical_line()}")
                    print(f"{draw_vertical_line()} {Fore.CYAN}–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:{Style.RESET_ALL}")
                    
                    for stat, value in selected_item.characteristics.items():
                        color = STAT_COLORS.get(stat, Fore.WHITE)
                        stat_name = stat.capitalize()
                        stat_icon = STAT_ICONS.get(stat, "üîπ")
                        
                        print(f"{draw_vertical_line()} {stat_icon} {stat_name}: {color}{value}{Style.RESET_ALL}")
            
            # –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
            print(f"{draw_vertical_line()}")
            draw_separator(80)
            print(f"{draw_vertical_line()} {Fore.CYAN}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{Style.RESET_ALL}")
            print(f"{draw_vertical_line()} {Fore.GREEN}[Enter]{Style.RESET_ALL} –≠–∫–∏–ø–∏—Ä–æ–≤–∞—Ç—å   {Fore.YELLOW}[‚Üë/‚Üì]{Style.RESET_ALL} –í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç   {Fore.RED}[Esc]{Style.RESET_ALL} –í–µ—Ä–Ω—É—Ç—å—Å—è")
        
        # –í—ã–≤–æ–¥ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        print(f"{draw_vertical_line()}")
        
        # –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        text_color = Fore.CYAN
        if not show_inventory_items:
            draw_separator(80)
            print(f"{draw_vertical_line()} {text_color}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{Style.RESET_ALL}")
            print(f"{draw_vertical_line()} {text_color}‚Üë/‚Üì{Style.RESET_ALL} - –í—ã–±–æ—Ä —Å–ª–æ—Ç–∞")
            print(f"{draw_vertical_line()} {text_color}Enter{Style.RESET_ALL} - –í—ã–±—Ä–∞—Ç—å/–∑–∞–º–µ–Ω–∏—Ç—å —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É")
            print(f"{draw_vertical_line()} {text_color}–ü—Ä–æ–±–µ–ª{Style.RESET_ALL} - –°–Ω—è—Ç—å —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É")
            print(f"{draw_vertical_line()} {text_color}ESC{Style.RESET_ALL} - –í—ã—Ö–æ–¥")
        else:
            draw_separator(80)
            print(f"{draw_vertical_line()} {text_color}–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{Style.RESET_ALL}")
            print(f"{draw_vertical_line()} {text_color}‚Üë/‚Üì{Style.RESET_ALL} - –í—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞")
            print(f"{draw_vertical_line()} {text_color}Enter{Style.RESET_ALL} - –≠–∫–∏–ø–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç")
            print(f"{draw_vertical_line()} {text_color}ESC{Style.RESET_ALL} - –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–ª–æ—Ç–æ–≤")
            
        # –ù–∏–∂–Ω—è—è —Ä–∞–º–∫–∞
        draw_bottom_box(80)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
        key = game_menu.get_key()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
        if key == "ESC":
            if show_inventory_items:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
                show_inventory_items = False
            else:
                # –í—ã—Ö–æ–¥ –∏–∑ —ç–∫—Ä–∞–Ω–∞ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
                return
        
        elif not show_inventory_items:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–ª–æ—Ç–∞–º —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
            if key == "UP":
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤–≤–µ—Ä—Ö –ø–æ —Å–ø–∏—Å–∫—É —Å–ª–æ—Ç–æ–≤
                current_slot_index = (current_slot_index - 1) % len(slots)
            
            elif key == "DOWN":
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤–Ω–∏–∑ –ø–æ —Å–ø–∏—Å–∫—É —Å–ª–æ—Ç–æ–≤
                current_slot_index = (current_slot_index + 1) % len(slots)
            
            elif key == "ENTER":
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —Å–ª–æ—Ç–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –ø—É—Å—Ç –æ–Ω –∏–ª–∏ –Ω–µ—Ç
                current_slot = slots[current_slot_index]
                all_items = player.inventory.get_items()
                equippable_items = [item for item in all_items if hasattr(item, 'get_slot') and item.get_slot() == current_slot]
                
                if equippable_items:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞
                    show_inventory_items = True
                    current_item_index = 0
                else:
                    # –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    game_menu.show_message(f"–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Å–ª–æ—Ç–∞ {SLOT_NAMES.get(current_slot, current_slot)}", Fore.YELLOW)
            
            elif (key == " " or key == "SPACE") and equipment[slots[current_slot_index]]:
                # –°–Ω–∏–º–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç
                success, message = player.unequip_item(slots[current_slot_index])
                if success:
                    game_menu.show_message(message, Fore.GREEN)
                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–æ–Ω—É—Å—ã –ø–æ—Å–ª–µ —Å–Ω—è—Ç–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
                    bonuses = player.get_equipment_bonuses()
                else:
                    game_menu.show_message(message, Fore.RED)
        
        else:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
            all_items = player.inventory.get_items()
            current_slot = slots[current_slot_index]
            equippable_items = [item for item in all_items if hasattr(item, 'get_slot') and item.get_slot() == current_slot]
            
            if not equippable_items:
                show_inventory_items = False
                continue
            
            if key == "UP" and equippable_items:
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤–≤–µ—Ä—Ö –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                current_item_index = (current_item_index - 1) % len(equippable_items)
            
            elif key == "DOWN" and equippable_items:
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤–Ω–∏–∑ –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                current_item_index = (current_item_index + 1) % len(equippable_items)
            
            elif key == "ENTER" and equippable_items and current_item_index < len(equippable_items):
                # –≠–∫–∏–ø–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
                selected_item = equippable_items[current_item_index]
                success, message = player.equip_item(selected_item)
                
                if success:
                    game_menu.show_message(message, Fore.GREEN)
                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–æ–Ω—É—Å—ã –ø–æ—Å–ª–µ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
                    bonuses = player.get_equipment_bonuses()
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
                    show_inventory_items = False
                else:
                    game_menu.show_message(message, Fore.RED)

def get_rarity_name(rarity):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–¥–∫–æ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"""
    rarity_names = {
        "COMMON": "–û–±—ã—á–Ω—ã–π",
        "UNCOMMON": "–ù–µ–æ–±—ã—á–Ω—ã–π",
        "RARE": "–†–µ–¥–∫–∏–π",
        "EPIC": "–≠–ø–∏—á–µ—Å–∫–∏–π",
        "LEGENDARY": "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π",
        "MYTHIC": "–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π"
    }
    return rarity_names.get(rarity, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") 